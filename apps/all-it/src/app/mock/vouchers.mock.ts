import { Voucher, VoucherState, IVoucherService, RedemptionType } from '@perx/core';
import { of, BehaviorSubject } from 'rxjs';

export const vouchersServiceStub: IVoucherService = {
  getAll: () => of(vouchers),
  get: (id) => of(vouchers.find(voucher => voucher.id === id)),
  reset: () => vouchers.forEach((_, key) => delete vouchers[key]),
  redeemVoucher: () => of(null),
  newVouchersCreatedForReward: () => of(vouchers),
  stateChangedForVoucher: () => new BehaviorSubject<Voucher>(null),
  reserveReward: () => of(vouchers[0]),
  issueReward: () => of(vouchers[0])
};

export const vouchers: Voucher[] = [
  {
    id: 1,
    reward: {
      id: 1,
      name: 'Voucher',
      description: 'Voucher',
      subtitle: 'Voucher',
      validFrom: new Date(),
      validTo: new Date(),
      sellingFrom: new Date(),
      rewardThumbnail: '',
      rewardBanner: '',
      merchantImg: '',
      rewardPrice: [{ id: 1 }],
      merchantId: 1,
      merchantName: 'Test',
      merchantWebsite: '',
      termsAndConditions: 'Test',
      howToRedeem: 'pin',
      categoryTags: [],
      inventory: null,
    },
    redemptionType: RedemptionType.pin,
    state: VoucherState.issued,
    code: 'XXXX - XXXX - XXXX - XXXX',
    expiry: new Date(),
  },
  {
    id: 2,
    reward: {
      id: 2,
      name: '',
      description: '',
      subtitle: '',
      validFrom: new Date(),
      validTo: new Date(),
      sellingFrom: new Date(),
      rewardThumbnail: '',
      rewardBanner: '',
      merchantImg: '',
      rewardPrice: [],
      merchantId: 1,
      merchantName: '',
      merchantWebsite: '',
      termsAndConditions: '',
      howToRedeem: '',
      categoryTags: [],
      inventory: null,
    },
    redemptionType: RedemptionType.none,
    state: VoucherState.issued,
    expiry: null,
  },
  {
    id: 3,
    reward: {
      id: 3,
      name: '',
      description: '',
      subtitle: '',
      validFrom: new Date(),
      validTo: new Date(),
      sellingFrom: new Date(),
      rewardThumbnail: '',
      rewardBanner: '',
      merchantImg: '',
      rewardPrice: [],
      merchantId: 1,
      merchantName: '',
      merchantWebsite: '',
      termsAndConditions: '',
      howToRedeem: '',
      categoryTags: [],
      inventory: null,
    },
    redemptionType: RedemptionType.none,
    state: VoucherState.issued,
    code: 'XXXX - XXXX - XXXX - XXXX',
    expiry: new Date(),
  },
  {
    id: 4,
    reward: {
      id: 4,
      name: '',
      description: '',
      subtitle: '',
      validFrom: new Date(),
      validTo: new Date(),
      sellingFrom: new Date(),
      rewardThumbnail: '',
      rewardBanner: '',
      merchantImg: '',
      rewardPrice: [],
      merchantId: 1,
      merchantName: '',
      merchantWebsite: '',
      termsAndConditions: '',
      howToRedeem: '',
      categoryTags: [],
      inventory: null,
    },
    redemptionType: RedemptionType.none,
    state: VoucherState.issued,
    expiry: null,
  },
  {
    id: 5,
    reward: {
      id: 5,
      name: '',
      description: '',
      subtitle: '',
      validFrom: new Date(),
      validTo: new Date(),
      sellingFrom: new Date(),
      rewardThumbnail: '',
      rewardBanner: '',
      merchantImg: '',
      rewardPrice: [],
      merchantId: 1,
      merchantName: '',
      merchantWebsite: '',
      termsAndConditions: '',
      howToRedeem: '',
      categoryTags: [],
      inventory: null,
    },
    redemptionType: RedemptionType.none,
    state: VoucherState.expired,
    expiry: null,
  },
  {
    id: 6,
    reward: {
      id: 6,
      name: '',
      description: '',
      subtitle: '',
      validFrom: new Date(),
      validTo: new Date(),
      sellingFrom: new Date(),
      rewardThumbnail: '',
      rewardBanner: '',
      merchantImg: '',
      rewardPrice: [],
      merchantId: 1,
      merchantName: '',
      merchantWebsite: '',
      termsAndConditions: '',
      howToRedeem: '',
      categoryTags: [],
      inventory: null,
    },
    redemptionType: RedemptionType.none,
    state: VoucherState.redeemed,
    expiry: null,
  }
];
