# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: deploy
on:
  push:
    tags:
      - '*[0-9]+.[0-9]+.[0-9]+*'
jobs:
  docker_build:
    name: Docker Build
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Dockerhub
        run: |
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USER}} --password-stdin

      - name: Set environment variables
        run: |
          ./scripts/set_env_vars.sh

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        id: buildx

      # TODO: check the status of: https://github.com/actions/cache/issues/556
      # Cache is broken for tagged deploy
      # - name: Cache Docker layers
      #   uses: actions/cache@v2
      #   with:
      #     path: /tmp/.buildx-cache
      #     key: ${{ runner.os }}-${{ env.APP }}-${{ env.TARGET_ENV }}-buildx
      #     restore-keys: |
      #       ${{ runner.os }}-${{ env.APP }}-

      - name: Build image
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: "perxtech/microsite-apps-ng:${{ env.DOCKER_TAG }}"
          # cache-from: type=local,src=/tmp/.buildx-cache
          # cache-to: type=local,dest=/tmp/.buildx-cache-new
          build-args: |
            app=${{ env.APP }}
            apihost=${{ env.APIHOST }}
            basehref=${{ env.BASE_HREF }}
            preauth=${{ env.PREAUTH }}
            iswhistler=${{ env.IS_WHISTLER }}
            sourcetype=${{ env.SOURCE_TYPE }}
            env=${{ env.TARGET_ENV }}
            appbase=${{ env.APP_BASE }}
            redirectdest=${{ env.REDIRECT_AFTER_LOGIN }}
            perx_app_version=${{ env.PERX_APP_VERSION }}

      # - name: Move cache
      #   run: |
      #     rm -rf /tmp/.buildx-cache
      #     mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs:
      - docker_build
    steps:
      - name: Checkout microsite-deploy
        uses: actions/checkout@v2
        with:
          repository: PerxTech/microsite-deploy
          ref: master
          token: ${{ secrets.MICROSITE_DEPLOY_TOKEN }}

      - name: Set environment variables
        run: |
          REGEX="([[:alnum:]-]+)-(staging|production)-?([[:alnum:]-]*)-([0-9]+\.[0-9]+\.[0-9]+-?[0-9]*)"
          echo "GITHUB_REF: ${GITHUB_REF}"
          if [[ "${GITHUB_REF}" =~ $REGEX ]]; then
            echo "APP=${BASH_REMATCH[1]}" >> "${GITHUB_ENV}"
            echo "TARGET_ENV=${BASH_REMATCH[2]}" >> "${GITHUB_ENV}"
            echo "SEM_VER=${BASH_REMATCH[4]}" >> "${GITHUB_ENV}"
            echo "DOCKER_TAG=${GITHUB_REF##*/}" >> "${GITHUB_ENV}"
          else
            echo "Error! Unrecognized tag"
            exit 1
          fi

      - name: Check env variables
        run: |
          echo "APP: $APP"
          echo "TARGET_ENV: $TARGET_ENV"
          echo "SEM_VER: $SEM_VER"
          echo "DOCKER_TAG: $DOCKER_TAG"

      - name: Login to Dockerhub
        run: |
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USER }} --password-stdin

      - name: Generate kubeconfig
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.AWS_KUBE_CONFIG }}

      - name: Set kube context
        run: |
          kubectl config use-context ${TARGET_ENV}

      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          HELM_PASSWORD: ${{ secrets.HELM_PASSWORD }}
        run: |
          echo "Deploying ${APP}"
          make deploy
